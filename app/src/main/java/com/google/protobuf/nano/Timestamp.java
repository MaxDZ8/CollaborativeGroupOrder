// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.google.protobuf.nano;

@SuppressWarnings("hiding")
public final class Timestamp extends
    com.google.protobuf.nano.MessageNano {

  private static volatile Timestamp[] _emptyArray;
  public static Timestamp[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new Timestamp[0];
        }
      }
    }
    return _emptyArray;
  }

  // optional int64 seconds = 1;
  public long seconds;

  // optional int32 nanos = 2;
  public int nanos;

  public Timestamp() {
    clear();
  }

  public Timestamp clear() {
    seconds = 0L;
    nanos = 0;
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (this.seconds != 0L) {
      output.writeInt64(1, this.seconds);
    }
    if (this.nanos != 0) {
      output.writeInt32(2, this.nanos);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (this.seconds != 0L) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt64Size(1, this.seconds);
    }
    if (this.nanos != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.nanos);
    }
    return size;
  }

  @Override
  public Timestamp mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 8: {
          this.seconds = input.readInt64();
          break;
        }
        case 16: {
          this.nanos = input.readInt32();
          break;
        }
      }
    }
  }

  public static Timestamp parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new Timestamp(), data);
  }

  public static Timestamp parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new Timestamp().mergeFrom(input);
  }
}
