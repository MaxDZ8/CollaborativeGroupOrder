// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.massimodz8.collaborativegrouporder.protocol.nano;

@SuppressWarnings("hiding")
public interface Network {

  public static final class Hello extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Hello[] _emptyArray;
    public static Hello[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Hello[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 version = 1;
    public int version;

    // optional bytes authorize = 2;
    public byte[] authorize;

    public Hello() {
      clear();
    }

    public Hello clear() {
      version = 0;
      authorize = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.version != 0) {
        output.writeUInt32(1, this.version);
      }
      if (!java.util.Arrays.equals(this.authorize, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(2, this.authorize);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.version != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.version);
      }
      if (!java.util.Arrays.equals(this.authorize, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(2, this.authorize);
      }
      return size;
    }

    @Override
    public Hello mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.version = input.readUInt32();
            break;
          }
          case 18: {
            this.authorize = input.readBytes();
            break;
          }
        }
      }
    }

    public static Hello parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Hello(), data);
    }

    public static Hello parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Hello().mergeFrom(input);
    }
  }

  public static final class GroupInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile GroupInfo[] _emptyArray;
    public static GroupInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new GroupInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 version = 1;
    public int version;

    // optional string name = 2;
    public java.lang.String name;

    // repeated string options = 3;
    public java.lang.String[] options;

    // optional bool forming = 4;
    public boolean forming;

    // optional bytes doormat = 5;
    public byte[] doormat;

    public GroupInfo() {
      clear();
    }

    public GroupInfo clear() {
      version = 0;
      name = "";
      options = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      forming = false;
      doormat = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.version != 0) {
        output.writeUInt32(1, this.version);
      }
      if (!this.name.equals("")) {
        output.writeString(2, this.name);
      }
      if (this.options != null && this.options.length > 0) {
        for (int i = 0; i < this.options.length; i++) {
          java.lang.String element = this.options[i];
          if (element != null) {
            output.writeString(3, element);
          }
        }
      }
      if (this.forming != false) {
        output.writeBool(4, this.forming);
      }
      if (!java.util.Arrays.equals(this.doormat, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(5, this.doormat);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.version != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.version);
      }
      if (!this.name.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.name);
      }
      if (this.options != null && this.options.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.options.length; i++) {
          java.lang.String element = this.options[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      if (this.forming != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(4, this.forming);
      }
      if (!java.util.Arrays.equals(this.doormat, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(5, this.doormat);
      }
      return size;
    }

    @Override
    public GroupInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.version = input.readUInt32();
            break;
          }
          case 18: {
            this.name = input.readString();
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.options == null ? 0 : this.options.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.options, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.options = newArray;
            break;
          }
          case 32: {
            this.forming = input.readBool();
            break;
          }
          case 42: {
            this.doormat = input.readBytes();
            break;
          }
        }
      }
    }

    public static GroupInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new GroupInfo(), data);
    }

    public static GroupInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new GroupInfo().mergeFrom(input);
    }
  }

  public static final class CharBudget extends
      com.google.protobuf.nano.MessageNano {

    private static volatile CharBudget[] _emptyArray;
    public static CharBudget[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new CharBudget[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 total = 1;
    public int total;

    // optional uint32 period = 2;
    public int period;

    // optional uint32 charSpecific = 3;
    public int charSpecific;

    public CharBudget() {
      clear();
    }

    public CharBudget clear() {
      total = 0;
      period = 0;
      charSpecific = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.total != 0) {
        output.writeUInt32(1, this.total);
      }
      if (this.period != 0) {
        output.writeUInt32(2, this.period);
      }
      if (this.charSpecific != 0) {
        output.writeUInt32(3, this.charSpecific);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.total != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.total);
      }
      if (this.period != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.period);
      }
      if (this.charSpecific != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.charSpecific);
      }
      return size;
    }

    @Override
    public CharBudget mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.total = input.readUInt32();
            break;
          }
          case 16: {
            this.period = input.readUInt32();
            break;
          }
          case 24: {
            this.charSpecific = input.readUInt32();
            break;
          }
        }
      }
    }

    public static CharBudget parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new CharBudget(), data);
    }

    public static CharBudget parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new CharBudget().mergeFrom(input);
    }
  }

  public static final class PeerMessage extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PeerMessage[] _emptyArray;
    public static PeerMessage[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PeerMessage[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string text = 1;
    public java.lang.String text;

    // optional uint32 charSpecific = 2;
    public int charSpecific;

    public PeerMessage() {
      clear();
    }

    public PeerMessage clear() {
      text = "";
      charSpecific = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.text.equals("")) {
        output.writeString(1, this.text);
      }
      if (this.charSpecific != 0) {
        output.writeUInt32(2, this.charSpecific);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.text.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.text);
      }
      if (this.charSpecific != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.charSpecific);
      }
      return size;
    }

    @Override
    public PeerMessage mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.text = input.readString();
            break;
          }
          case 16: {
            this.charSpecific = input.readUInt32();
            break;
          }
        }
      }
    }

    public static PeerMessage parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PeerMessage(), data);
    }

    public static PeerMessage parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PeerMessage().mergeFrom(input);
    }
  }

  public static final class GroupFormed extends
      com.google.protobuf.nano.MessageNano {

    private static volatile GroupFormed[] _emptyArray;
    public static GroupFormed[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new GroupFormed[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bytes salt = 1;
    public byte[] salt;

    // optional uint32 peerKey = 2;
    public int peerKey;

    // optional bool accepted = 3;
    public boolean accepted;

    public GroupFormed() {
      clear();
    }

    public GroupFormed clear() {
      salt = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      peerKey = 0;
      accepted = false;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!java.util.Arrays.equals(this.salt, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(1, this.salt);
      }
      if (this.peerKey != 0) {
        output.writeUInt32(2, this.peerKey);
      }
      if (this.accepted != false) {
        output.writeBool(3, this.accepted);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!java.util.Arrays.equals(this.salt, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(1, this.salt);
      }
      if (this.peerKey != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.peerKey);
      }
      if (this.accepted != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(3, this.accepted);
      }
      return size;
    }

    @Override
    public GroupFormed mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.salt = input.readBytes();
            break;
          }
          case 16: {
            this.peerKey = input.readUInt32();
            break;
          }
          case 24: {
            this.accepted = input.readBool();
            break;
          }
        }
      }
    }

    public static GroupFormed parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new GroupFormed(), data);
    }

    public static GroupFormed parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new GroupFormed().mergeFrom(input);
    }
  }

  public static final class PlayingCharacterDefinition extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PlayingCharacterDefinition[] _emptyArray;
    public static PlayingCharacterDefinition[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PlayingCharacterDefinition[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string name = 1;
    public java.lang.String name;

    // optional uint32 initiativeBonus = 2;
    public int initiativeBonus;

    // optional uint32 healthPoints = 3;
    public int healthPoints;

    // optional uint32 experience = 4;
    public int experience;

    // optional uint32 peerKey = 5;
    public int peerKey;

    // optional uint32 level = 6;
    public int level;

    // optional uint32 redefine = 7;
    public int redefine;

    public PlayingCharacterDefinition() {
      clear();
    }

    public PlayingCharacterDefinition clear() {
      name = "";
      initiativeBonus = 0;
      healthPoints = 0;
      experience = 0;
      peerKey = 0;
      level = 0;
      redefine = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.name.equals("")) {
        output.writeString(1, this.name);
      }
      if (this.initiativeBonus != 0) {
        output.writeUInt32(2, this.initiativeBonus);
      }
      if (this.healthPoints != 0) {
        output.writeUInt32(3, this.healthPoints);
      }
      if (this.experience != 0) {
        output.writeUInt32(4, this.experience);
      }
      if (this.peerKey != 0) {
        output.writeUInt32(5, this.peerKey);
      }
      if (this.level != 0) {
        output.writeUInt32(6, this.level);
      }
      if (this.redefine != 0) {
        output.writeUInt32(7, this.redefine);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.name.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.name);
      }
      if (this.initiativeBonus != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.initiativeBonus);
      }
      if (this.healthPoints != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.healthPoints);
      }
      if (this.experience != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(4, this.experience);
      }
      if (this.peerKey != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(5, this.peerKey);
      }
      if (this.level != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(6, this.level);
      }
      if (this.redefine != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(7, this.redefine);
      }
      return size;
    }

    @Override
    public PlayingCharacterDefinition mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.name = input.readString();
            break;
          }
          case 16: {
            this.initiativeBonus = input.readUInt32();
            break;
          }
          case 24: {
            this.healthPoints = input.readUInt32();
            break;
          }
          case 32: {
            this.experience = input.readUInt32();
            break;
          }
          case 40: {
            this.peerKey = input.readUInt32();
            break;
          }
          case 48: {
            this.level = input.readUInt32();
            break;
          }
          case 56: {
            this.redefine = input.readUInt32();
            break;
          }
        }
      }
    }

    public static PlayingCharacterDefinition parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PlayingCharacterDefinition(), data);
    }

    public static PlayingCharacterDefinition parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PlayingCharacterDefinition().mergeFrom(input);
    }
  }

  public static final class PhaseControl extends
      com.google.protobuf.nano.MessageNano {

    // enum Type
    public static final int T_INVALID = 0;
    public static final int T_NO_MORE_DEFINITIONS = 1;
    public static final int T_DEFINITIVE_CHAR_ASSIGNMENT = 2;
    public static final int T_SESSION_ENDED = 3;

    private static volatile PhaseControl[] _emptyArray;
    public static PhaseControl[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PhaseControl[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .PhaseControl.Type type = 1;
    public int type;

    // optional bool terminated = 2;
    public boolean terminated;

    // repeated uint32 yourChars = 3;
    public int[] yourChars;

    public PhaseControl() {
      clear();
    }

    public PhaseControl clear() {
      type = com.massimodz8.collaborativegrouporder.protocol.nano.Network.PhaseControl.T_INVALID;
      terminated = false;
      yourChars = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.type != com.massimodz8.collaborativegrouporder.protocol.nano.Network.PhaseControl.T_INVALID) {
        output.writeInt32(1, this.type);
      }
      if (this.terminated != false) {
        output.writeBool(2, this.terminated);
      }
      if (this.yourChars != null && this.yourChars.length > 0) {
        for (int i = 0; i < this.yourChars.length; i++) {
          output.writeUInt32(3, this.yourChars[i]);
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.type != com.massimodz8.collaborativegrouporder.protocol.nano.Network.PhaseControl.T_INVALID) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.type);
      }
      if (this.terminated != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.terminated);
      }
      if (this.yourChars != null && this.yourChars.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.yourChars.length; i++) {
          int element = this.yourChars[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.yourChars.length;
      }
      return size;
    }

    @Override
    public PhaseControl mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.PhaseControl.T_INVALID:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.PhaseControl.T_NO_MORE_DEFINITIONS:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.PhaseControl.T_DEFINITIVE_CHAR_ASSIGNMENT:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.PhaseControl.T_SESSION_ENDED:
                this.type = value;
                break;
            }
            break;
          }
          case 16: {
            this.terminated = input.readBool();
            break;
          }
          case 24: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 24);
            int i = this.yourChars == null ? 0 : this.yourChars.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.yourChars, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt32();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt32();
            this.yourChars = newArray;
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt32();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.yourChars == null ? 0 : this.yourChars.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.yourChars, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt32();
            }
            this.yourChars = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }

    public static PhaseControl parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PhaseControl(), data);
    }

    public static PhaseControl parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PhaseControl().mergeFrom(input);
    }
  }

  public static final class CharacterOwnership extends
      com.google.protobuf.nano.MessageNano {

    // enum Type
    public static final int REQUEST = 0;
    public static final int OBSOLETE = 1;
    public static final int ACCEPTED = 2;
    public static final int REJECTED = 3;
    public static final int YOURS = 4;
    public static final int AVAIL = 5;
    public static final int BOUND = 6;

    private static volatile CharacterOwnership[] _emptyArray;
    public static CharacterOwnership[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new CharacterOwnership[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 character = 1;
    public int character;

    // optional uint32 ticket = 2;
    public int ticket;

    // optional .CharacterOwnership.Type type = 3;
    public int type;

    public CharacterOwnership() {
      clear();
    }

    public CharacterOwnership clear() {
      character = 0;
      ticket = 0;
      type = com.massimodz8.collaborativegrouporder.protocol.nano.Network.CharacterOwnership.REQUEST;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.character != 0) {
        output.writeUInt32(1, this.character);
      }
      if (this.ticket != 0) {
        output.writeUInt32(2, this.ticket);
      }
      if (this.type != com.massimodz8.collaborativegrouporder.protocol.nano.Network.CharacterOwnership.REQUEST) {
        output.writeInt32(3, this.type);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.character != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.character);
      }
      if (this.ticket != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.ticket);
      }
      if (this.type != com.massimodz8.collaborativegrouporder.protocol.nano.Network.CharacterOwnership.REQUEST) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.type);
      }
      return size;
    }

    @Override
    public CharacterOwnership mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.character = input.readUInt32();
            break;
          }
          case 16: {
            this.ticket = input.readUInt32();
            break;
          }
          case 24: {
            int value = input.readInt32();
            switch (value) {
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.CharacterOwnership.REQUEST:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.CharacterOwnership.OBSOLETE:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.CharacterOwnership.ACCEPTED:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.CharacterOwnership.REJECTED:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.CharacterOwnership.YOURS:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.CharacterOwnership.AVAIL:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.CharacterOwnership.BOUND:
                this.type = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static CharacterOwnership parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new CharacterOwnership(), data);
    }

    public static CharacterOwnership parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new CharacterOwnership().mergeFrom(input);
    }
  }

  public static final class Roll extends
      com.google.protobuf.nano.MessageNano {

    // enum Type
    public static final int T_MISC = 0;
    public static final int T_INITIATIVE = 1;

    private static volatile Roll[] _emptyArray;
    public static Roll[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Roll[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string note = 1;
    public java.lang.String note;

    // optional uint32 unique = 2;
    public int unique;

    // optional uint32 range = 3;
    public int range;

    // optional uint32 peerKey = 4;
    public int peerKey;

    // optional int32 result = 5;
    public int result;

    // optional .Roll.Type type = 6;
    public int type;

    public Roll() {
      clear();
    }

    public Roll clear() {
      note = "";
      unique = 0;
      range = 0;
      peerKey = 0;
      result = 0;
      type = com.massimodz8.collaborativegrouporder.protocol.nano.Network.Roll.T_MISC;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.note.equals("")) {
        output.writeString(1, this.note);
      }
      if (this.unique != 0) {
        output.writeUInt32(2, this.unique);
      }
      if (this.range != 0) {
        output.writeUInt32(3, this.range);
      }
      if (this.peerKey != 0) {
        output.writeUInt32(4, this.peerKey);
      }
      if (this.result != 0) {
        output.writeInt32(5, this.result);
      }
      if (this.type != com.massimodz8.collaborativegrouporder.protocol.nano.Network.Roll.T_MISC) {
        output.writeInt32(6, this.type);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.note.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.note);
      }
      if (this.unique != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.unique);
      }
      if (this.range != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.range);
      }
      if (this.peerKey != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(4, this.peerKey);
      }
      if (this.result != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.result);
      }
      if (this.type != com.massimodz8.collaborativegrouporder.protocol.nano.Network.Roll.T_MISC) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(6, this.type);
      }
      return size;
    }

    @Override
    public Roll mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.note = input.readString();
            break;
          }
          case 16: {
            this.unique = input.readUInt32();
            break;
          }
          case 24: {
            this.range = input.readUInt32();
            break;
          }
          case 32: {
            this.peerKey = input.readUInt32();
            break;
          }
          case 40: {
            this.result = input.readInt32();
            break;
          }
          case 48: {
            int value = input.readInt32();
            switch (value) {
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.Roll.T_MISC:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.Roll.T_INITIATIVE:
                this.type = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static Roll parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Roll(), data);
    }

    public static Roll parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Roll().mergeFrom(input);
    }
  }

  public static final class BattleOrder extends
      com.google.protobuf.nano.MessageNano {

    private static volatile BattleOrder[] _emptyArray;
    public static BattleOrder[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new BattleOrder[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 asKnownBy = 1;
    public int asKnownBy;

    // repeated uint32 order = 2;
    public int[] order;

    public BattleOrder() {
      clear();
    }

    public BattleOrder clear() {
      asKnownBy = 0;
      order = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.asKnownBy != 0) {
        output.writeUInt32(1, this.asKnownBy);
      }
      if (this.order != null && this.order.length > 0) {
        for (int i = 0; i < this.order.length; i++) {
          output.writeUInt32(2, this.order[i]);
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.asKnownBy != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.asKnownBy);
      }
      if (this.order != null && this.order.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.order.length; i++) {
          int element = this.order[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.order.length;
      }
      return size;
    }

    @Override
    public BattleOrder mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.asKnownBy = input.readUInt32();
            break;
          }
          case 16: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 16);
            int i = this.order == null ? 0 : this.order.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.order, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt32();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt32();
            this.order = newArray;
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt32();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.order == null ? 0 : this.order.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.order, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt32();
            }
            this.order = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }

    public static BattleOrder parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new BattleOrder(), data);
    }

    public static BattleOrder parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new BattleOrder().mergeFrom(input);
    }
  }

  public static final class TurnControl extends
      com.google.protobuf.nano.MessageNano {

    // enum Type
    public static final int T_FORCE_DONE = 0;
    public static final int T_REGULAR = 1;
    public static final int T_PREPARED_TRIGGERED = 2;
    public static final int T_OPPORTUNITY = 3;
    public static final int T_BATTLE_ENDED = 32;
    public static final int T_BATTLE_ROUND = 33;

    private static volatile TurnControl[] _emptyArray;
    public static TurnControl[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new TurnControl[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .TurnControl.Type type = 1;
    public int type;

    // optional uint32 peerKey = 2;
    public int peerKey;

    // optional uint32 round = 3;
    public int round;

    public TurnControl() {
      clear();
    }

    public TurnControl clear() {
      type = com.massimodz8.collaborativegrouporder.protocol.nano.Network.TurnControl.T_FORCE_DONE;
      peerKey = 0;
      round = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.type != com.massimodz8.collaborativegrouporder.protocol.nano.Network.TurnControl.T_FORCE_DONE) {
        output.writeInt32(1, this.type);
      }
      if (this.peerKey != 0) {
        output.writeUInt32(2, this.peerKey);
      }
      if (this.round != 0) {
        output.writeUInt32(3, this.round);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.type != com.massimodz8.collaborativegrouporder.protocol.nano.Network.TurnControl.T_FORCE_DONE) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.type);
      }
      if (this.peerKey != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.peerKey);
      }
      if (this.round != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.round);
      }
      return size;
    }

    @Override
    public TurnControl mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.TurnControl.T_FORCE_DONE:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.TurnControl.T_REGULAR:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.TurnControl.T_PREPARED_TRIGGERED:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.TurnControl.T_OPPORTUNITY:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.TurnControl.T_BATTLE_ENDED:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.TurnControl.T_BATTLE_ROUND:
                this.type = value;
                break;
            }
            break;
          }
          case 16: {
            this.peerKey = input.readUInt32();
            break;
          }
          case 24: {
            this.round = input.readUInt32();
            break;
          }
        }
      }
    }

    public static TurnControl parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TurnControl(), data);
    }

    public static TurnControl parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TurnControl().mergeFrom(input);
    }
  }

  public static final class ActorState extends
      com.google.protobuf.nano.MessageNano {

    // enum Type
    public static final int T_UNDEFINED = 0;
    public static final int T_PLAYING_CHARACTER = 1;
    public static final int T_NPC = 2;
    public static final int T_MOB = 3;
    public static final int T_PARTIAL_PREPARE_CONDITION = 16;

    public static final class ChallangeRatio extends
        com.google.protobuf.nano.MessageNano {

      private static volatile ChallangeRatio[] _emptyArray;
      public static ChallangeRatio[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new ChallangeRatio[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional uint32 numerator = 1;
      public int numerator;

      // optional uint32 denominator = 2;
      public int denominator;

      public ChallangeRatio() {
        clear();
      }

      public ChallangeRatio clear() {
        numerator = 0;
        denominator = 0;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.numerator != 0) {
          output.writeUInt32(1, this.numerator);
        }
        if (this.denominator != 0) {
          output.writeUInt32(2, this.denominator);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.numerator != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(1, this.numerator);
        }
        if (this.denominator != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(2, this.denominator);
        }
        return size;
      }

      @Override
      public ChallangeRatio mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.numerator = input.readUInt32();
              break;
            }
            case 16: {
              this.denominator = input.readUInt32();
              break;
            }
          }
        }
      }

      public static ChallangeRatio parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new ChallangeRatio(), data);
      }

      public static ChallangeRatio parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new ChallangeRatio().mergeFrom(input);
      }
    }

    private static volatile ActorState[] _emptyArray;
    public static ActorState[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ActorState[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .ActorState.Type type = 1;
    public int type;

    // optional uint32 peerKey = 2;
    public int peerKey;

    // optional string name = 3;
    public java.lang.String name;

    // optional int32 currentHP = 4;
    public int currentHP;

    // optional uint32 maxHP = 5;
    public int maxHP;

    // optional string prepareCondition = 6;
    public java.lang.String prepareCondition;

    // optional bool preparedTriggered = 7;
    public boolean preparedTriggered;

    // optional int32 initiativeBonus = 128;
    public int initiativeBonus;

    // optional .ActorState.ChallangeRatio cr = 129;
    public com.massimodz8.collaborativegrouporder.protocol.nano.Network.ActorState.ChallangeRatio cr;

    // optional uint32 experience = 130;
    public int experience;

    public ActorState() {
      clear();
    }

    public ActorState clear() {
      type = com.massimodz8.collaborativegrouporder.protocol.nano.Network.ActorState.T_UNDEFINED;
      peerKey = 0;
      name = "";
      currentHP = 0;
      maxHP = 0;
      prepareCondition = "";
      preparedTriggered = false;
      initiativeBonus = 0;
      cr = null;
      experience = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.type != com.massimodz8.collaborativegrouporder.protocol.nano.Network.ActorState.T_UNDEFINED) {
        output.writeInt32(1, this.type);
      }
      if (this.peerKey != 0) {
        output.writeUInt32(2, this.peerKey);
      }
      if (!this.name.equals("")) {
        output.writeString(3, this.name);
      }
      if (this.currentHP != 0) {
        output.writeInt32(4, this.currentHP);
      }
      if (this.maxHP != 0) {
        output.writeUInt32(5, this.maxHP);
      }
      if (!this.prepareCondition.equals("")) {
        output.writeString(6, this.prepareCondition);
      }
      if (this.preparedTriggered != false) {
        output.writeBool(7, this.preparedTriggered);
      }
      if (this.initiativeBonus != 0) {
        output.writeInt32(128, this.initiativeBonus);
      }
      if (this.cr != null) {
        output.writeMessage(129, this.cr);
      }
      if (this.experience != 0) {
        output.writeUInt32(130, this.experience);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.type != com.massimodz8.collaborativegrouporder.protocol.nano.Network.ActorState.T_UNDEFINED) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.type);
      }
      if (this.peerKey != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.peerKey);
      }
      if (!this.name.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.name);
      }
      if (this.currentHP != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.currentHP);
      }
      if (this.maxHP != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(5, this.maxHP);
      }
      if (!this.prepareCondition.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.prepareCondition);
      }
      if (this.preparedTriggered != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(7, this.preparedTriggered);
      }
      if (this.initiativeBonus != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(128, this.initiativeBonus);
      }
      if (this.cr != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(129, this.cr);
      }
      if (this.experience != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(130, this.experience);
      }
      return size;
    }

    @Override
    public ActorState mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.ActorState.T_UNDEFINED:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.ActorState.T_PLAYING_CHARACTER:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.ActorState.T_NPC:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.ActorState.T_MOB:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.ActorState.T_PARTIAL_PREPARE_CONDITION:
                this.type = value;
                break;
            }
            break;
          }
          case 16: {
            this.peerKey = input.readUInt32();
            break;
          }
          case 26: {
            this.name = input.readString();
            break;
          }
          case 32: {
            this.currentHP = input.readInt32();
            break;
          }
          case 40: {
            this.maxHP = input.readUInt32();
            break;
          }
          case 50: {
            this.prepareCondition = input.readString();
            break;
          }
          case 56: {
            this.preparedTriggered = input.readBool();
            break;
          }
          case 1024: {
            this.initiativeBonus = input.readInt32();
            break;
          }
          case 1034: {
            if (this.cr == null) {
              this.cr = new com.massimodz8.collaborativegrouporder.protocol.nano.Network.ActorState.ChallangeRatio();
            }
            input.readMessage(this.cr);
            break;
          }
          case 1040: {
            this.experience = input.readUInt32();
            break;
          }
        }
      }
    }

    public static ActorState parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ActorState(), data);
    }

    public static ActorState parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ActorState().mergeFrom(input);
    }
  }
}
