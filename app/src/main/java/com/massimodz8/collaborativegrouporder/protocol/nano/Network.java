// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.massimodz8.collaborativegrouporder.protocol.nano;

@SuppressWarnings("hiding")
public interface Network {

  public static final class Hello extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Hello[] _emptyArray;
    public static Hello[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Hello[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 version = 1;
    public int version;

    // optional bool verifyMe = 2;
    public boolean verifyMe;

    // optional bytes authorize = 3;
    public byte[] authorize;

    public Hello() {
      clear();
    }

    public Hello clear() {
      version = 0;
      verifyMe = false;
      authorize = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.version != 0) {
        output.writeUInt32(1, this.version);
      }
      if (this.verifyMe != false) {
        output.writeBool(2, this.verifyMe);
      }
      if (!java.util.Arrays.equals(this.authorize, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(3, this.authorize);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.version != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.version);
      }
      if (this.verifyMe != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.verifyMe);
      }
      if (!java.util.Arrays.equals(this.authorize, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(3, this.authorize);
      }
      return size;
    }

    @Override
    public Hello mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.version = input.readUInt32();
            break;
          }
          case 16: {
            this.verifyMe = input.readBool();
            break;
          }
          case 26: {
            this.authorize = input.readBytes();
            break;
          }
        }
      }
    }

    public static Hello parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Hello(), data);
    }

    public static Hello parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Hello().mergeFrom(input);
    }
  }

  public static final class GroupInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile GroupInfo[] _emptyArray;
    public static GroupInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new GroupInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 version = 1;
    public int version;

    // optional string name = 2;
    public java.lang.String name;

    // repeated string options = 3;
    public java.lang.String[] options;

    // optional bool forming = 4;
    public boolean forming;

    // optional bytes doormat = 5;
    public byte[] doormat;

    public GroupInfo() {
      clear();
    }

    public GroupInfo clear() {
      version = 0;
      name = "";
      options = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      forming = false;
      doormat = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.version != 0) {
        output.writeUInt32(1, this.version);
      }
      if (!this.name.equals("")) {
        output.writeString(2, this.name);
      }
      if (this.options != null && this.options.length > 0) {
        for (int i = 0; i < this.options.length; i++) {
          java.lang.String element = this.options[i];
          if (element != null) {
            output.writeString(3, element);
          }
        }
      }
      if (this.forming != false) {
        output.writeBool(4, this.forming);
      }
      if (!java.util.Arrays.equals(this.doormat, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(5, this.doormat);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.version != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.version);
      }
      if (!this.name.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.name);
      }
      if (this.options != null && this.options.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.options.length; i++) {
          java.lang.String element = this.options[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      if (this.forming != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(4, this.forming);
      }
      if (!java.util.Arrays.equals(this.doormat, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(5, this.doormat);
      }
      return size;
    }

    @Override
    public GroupInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.version = input.readUInt32();
            break;
          }
          case 18: {
            this.name = input.readString();
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.options == null ? 0 : this.options.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.options, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.options = newArray;
            break;
          }
          case 32: {
            this.forming = input.readBool();
            break;
          }
          case 42: {
            this.doormat = input.readBytes();
            break;
          }
        }
      }
    }

    public static GroupInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new GroupInfo(), data);
    }

    public static GroupInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new GroupInfo().mergeFrom(input);
    }
  }

  public static final class CharBudget extends
      com.google.protobuf.nano.MessageNano {

    private static volatile CharBudget[] _emptyArray;
    public static CharBudget[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new CharBudget[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 total = 1;
    public int total;

    // optional uint32 period = 2;
    public int period;

    // optional uint32 charSpecific = 3;
    public int charSpecific;

    public CharBudget() {
      clear();
    }

    public CharBudget clear() {
      total = 0;
      period = 0;
      charSpecific = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.total != 0) {
        output.writeUInt32(1, this.total);
      }
      if (this.period != 0) {
        output.writeUInt32(2, this.period);
      }
      if (this.charSpecific != 0) {
        output.writeUInt32(3, this.charSpecific);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.total != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.total);
      }
      if (this.period != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.period);
      }
      if (this.charSpecific != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.charSpecific);
      }
      return size;
    }

    @Override
    public CharBudget mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.total = input.readUInt32();
            break;
          }
          case 16: {
            this.period = input.readUInt32();
            break;
          }
          case 24: {
            this.charSpecific = input.readUInt32();
            break;
          }
        }
      }
    }

    public static CharBudget parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new CharBudget(), data);
    }

    public static CharBudget parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new CharBudget().mergeFrom(input);
    }
  }

  public static final class PeerMessage extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PeerMessage[] _emptyArray;
    public static PeerMessage[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PeerMessage[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string text = 1;
    public java.lang.String text;

    // optional uint32 charSpecific = 2;
    public int charSpecific;

    public PeerMessage() {
      clear();
    }

    public PeerMessage clear() {
      text = "";
      charSpecific = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.text.equals("")) {
        output.writeString(1, this.text);
      }
      if (this.charSpecific != 0) {
        output.writeUInt32(2, this.charSpecific);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.text.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.text);
      }
      if (this.charSpecific != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.charSpecific);
      }
      return size;
    }

    @Override
    public PeerMessage mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.text = input.readString();
            break;
          }
          case 16: {
            this.charSpecific = input.readUInt32();
            break;
          }
        }
      }
    }

    public static PeerMessage parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PeerMessage(), data);
    }

    public static PeerMessage parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PeerMessage().mergeFrom(input);
    }
  }

  public static final class GroupFormed extends
      com.google.protobuf.nano.MessageNano {

    private static volatile GroupFormed[] _emptyArray;
    public static GroupFormed[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new GroupFormed[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bytes salt = 1;
    public byte[] salt;

    // optional uint32 peerKey = 2;
    public int peerKey;

    // optional bool accepted = 3;
    public boolean accepted;

    public GroupFormed() {
      clear();
    }

    public GroupFormed clear() {
      salt = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      peerKey = 0;
      accepted = false;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!java.util.Arrays.equals(this.salt, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(1, this.salt);
      }
      if (this.peerKey != 0) {
        output.writeUInt32(2, this.peerKey);
      }
      if (this.accepted != false) {
        output.writeBool(3, this.accepted);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!java.util.Arrays.equals(this.salt, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(1, this.salt);
      }
      if (this.peerKey != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.peerKey);
      }
      if (this.accepted != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(3, this.accepted);
      }
      return size;
    }

    @Override
    public GroupFormed mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.salt = input.readBytes();
            break;
          }
          case 16: {
            this.peerKey = input.readUInt32();
            break;
          }
          case 24: {
            this.accepted = input.readBool();
            break;
          }
        }
      }
    }

    public static GroupFormed parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new GroupFormed(), data);
    }

    public static GroupFormed parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new GroupFormed().mergeFrom(input);
    }
  }

  public static final class PlayingCharacterDefinition extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PlayingCharacterDefinition[] _emptyArray;
    public static PlayingCharacterDefinition[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PlayingCharacterDefinition[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string name = 1;
    public java.lang.String name;

    // optional uint32 initiativeBonus = 2;
    public int initiativeBonus;

    // optional uint32 healthPoints = 3;
    public int healthPoints;

    // optional uint32 experience = 4;
    public int experience;

    // optional uint32 peerKey = 5;
    public int peerKey;

    // optional uint32 level = 6;
    public int level;

    public PlayingCharacterDefinition() {
      clear();
    }

    public PlayingCharacterDefinition clear() {
      name = "";
      initiativeBonus = 0;
      healthPoints = 0;
      experience = 0;
      peerKey = 0;
      level = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.name.equals("")) {
        output.writeString(1, this.name);
      }
      if (this.initiativeBonus != 0) {
        output.writeUInt32(2, this.initiativeBonus);
      }
      if (this.healthPoints != 0) {
        output.writeUInt32(3, this.healthPoints);
      }
      if (this.experience != 0) {
        output.writeUInt32(4, this.experience);
      }
      if (this.peerKey != 0) {
        output.writeUInt32(5, this.peerKey);
      }
      if (this.level != 0) {
        output.writeUInt32(6, this.level);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.name.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.name);
      }
      if (this.initiativeBonus != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.initiativeBonus);
      }
      if (this.healthPoints != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.healthPoints);
      }
      if (this.experience != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(4, this.experience);
      }
      if (this.peerKey != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(5, this.peerKey);
      }
      if (this.level != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(6, this.level);
      }
      return size;
    }

    @Override
    public PlayingCharacterDefinition mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.name = input.readString();
            break;
          }
          case 16: {
            this.initiativeBonus = input.readUInt32();
            break;
          }
          case 24: {
            this.healthPoints = input.readUInt32();
            break;
          }
          case 32: {
            this.experience = input.readUInt32();
            break;
          }
          case 40: {
            this.peerKey = input.readUInt32();
            break;
          }
          case 48: {
            this.level = input.readUInt32();
            break;
          }
        }
      }
    }

    public static PlayingCharacterDefinition parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PlayingCharacterDefinition(), data);
    }

    public static PlayingCharacterDefinition parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PlayingCharacterDefinition().mergeFrom(input);
    }
  }

  public static final class GroupReady extends
      com.google.protobuf.nano.MessageNano {

    private static volatile GroupReady[] _emptyArray;
    public static GroupReady[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new GroupReady[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bool go_adventuring = 1;
    public boolean goAdventuring;

    public GroupReady() {
      clear();
    }

    public GroupReady clear() {
      goAdventuring = false;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.goAdventuring != false) {
        output.writeBool(1, this.goAdventuring);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.goAdventuring != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(1, this.goAdventuring);
      }
      return size;
    }

    @Override
    public GroupReady mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.goAdventuring = input.readBool();
            break;
          }
        }
      }
    }

    public static GroupReady parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new GroupReady(), data);
    }

    public static GroupReady parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new GroupReady().mergeFrom(input);
    }
  }

  public static final class PlayingCharacterList extends
      com.google.protobuf.nano.MessageNano {

    // enum ListType
    public static final int READY = 0;
    public static final int AVAIL = 1;
    public static final int YOURS = 2;

    public static final class PersistentCharacter extends
        com.google.protobuf.nano.MessageNano {

      private static volatile PersistentCharacter[] _emptyArray;
      public static PersistentCharacter[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new PersistentCharacter[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional .PlayingCharacterDefinition pc = 1;
      public com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterDefinition pc;

      // optional uint32 groupIndex = 2;
      public int groupIndex;

      public PersistentCharacter() {
        clear();
      }

      public PersistentCharacter clear() {
        pc = null;
        groupIndex = 0;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.pc != null) {
          output.writeMessage(1, this.pc);
        }
        if (this.groupIndex != 0) {
          output.writeUInt32(2, this.groupIndex);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.pc != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(1, this.pc);
        }
        if (this.groupIndex != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(2, this.groupIndex);
        }
        return size;
      }

      @Override
      public PersistentCharacter mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              if (this.pc == null) {
                this.pc = new com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterDefinition();
              }
              input.readMessage(this.pc);
              break;
            }
            case 16: {
              this.groupIndex = input.readUInt32();
              break;
            }
          }
        }
      }

      public static PersistentCharacter parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new PersistentCharacter(), data);
      }

      public static PersistentCharacter parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new PersistentCharacter().mergeFrom(input);
      }
    }

    private static volatile PlayingCharacterList[] _emptyArray;
    public static PlayingCharacterList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PlayingCharacterList[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .PlayingCharacterList.PersistentCharacter payload = 1;
    public com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter[] payload;

    // optional .PlayingCharacterList.ListType set = 2;
    public int set;

    public PlayingCharacterList() {
      clear();
    }

    public PlayingCharacterList clear() {
      payload = com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter.emptyArray();
      set = com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.READY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.payload != null && this.payload.length > 0) {
        for (int i = 0; i < this.payload.length; i++) {
          com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter element = this.payload[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.set != com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.READY) {
        output.writeInt32(2, this.set);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.payload != null && this.payload.length > 0) {
        for (int i = 0; i < this.payload.length; i++) {
          com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter element = this.payload[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.set != com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.READY) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.set);
      }
      return size;
    }

    @Override
    public PlayingCharacterList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.payload == null ? 0 : this.payload.length;
            com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter[] newArray =
                new com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.payload, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter();
            input.readMessage(newArray[i]);
            this.payload = newArray;
            break;
          }
          case 16: {
            int value = input.readInt32();
            switch (value) {
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.READY:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.AVAIL:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.YOURS:
                this.set = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static PlayingCharacterList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PlayingCharacterList(), data);
    }

    public static PlayingCharacterList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PlayingCharacterList().mergeFrom(input);
    }
  }

  public static final class PlayingCharacterMoveRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PlayingCharacterMoveRequest[] _emptyArray;
    public static PlayingCharacterMoveRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PlayingCharacterMoveRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bool take = 1;
    public boolean take;

    // optional uint32 character = 2;
    public int character;

    public PlayingCharacterMoveRequest() {
      clear();
    }

    public PlayingCharacterMoveRequest clear() {
      take = false;
      character = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.take != false) {
        output.writeBool(1, this.take);
      }
      if (this.character != 0) {
        output.writeUInt32(2, this.character);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.take != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(1, this.take);
      }
      if (this.character != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.character);
      }
      return size;
    }

    @Override
    public PlayingCharacterMoveRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.take = input.readBool();
            break;
          }
          case 16: {
            this.character = input.readUInt32();
            break;
          }
        }
      }
    }

    public static PlayingCharacterMoveRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PlayingCharacterMoveRequest(), data);
    }

    public static PlayingCharacterMoveRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PlayingCharacterMoveRequest().mergeFrom(input);
    }
  }

  public static final class Adventuring extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Adventuring[] _emptyArray;
    public static Adventuring[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Adventuring[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .PlayingCharacterList.PersistentCharacter yours = 1;
    public com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter[] yours;

    public Adventuring() {
      clear();
    }

    public Adventuring clear() {
      yours = com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.yours != null && this.yours.length > 0) {
        for (int i = 0; i < this.yours.length; i++) {
          com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter element = this.yours[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.yours != null && this.yours.length > 0) {
        for (int i = 0; i < this.yours.length; i++) {
          com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter element = this.yours[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public Adventuring mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.yours == null ? 0 : this.yours.length;
            com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter[] newArray =
                new com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.yours, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.massimodz8.collaborativegrouporder.protocol.nano.Network.PlayingCharacterList.PersistentCharacter();
            input.readMessage(newArray[i]);
            this.yours = newArray;
            break;
          }
        }
      }
    }

    public static Adventuring parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Adventuring(), data);
    }

    public static Adventuring parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Adventuring().mergeFrom(input);
    }
  }

  public static final class ManualRollRequest extends
      com.google.protobuf.nano.MessageNano {

    // enum Dice
    public static final int FOUR = 0;
    public static final int SIX = 1;
    public static final int EIGHT = 2;
    public static final int TEN = 3;
    public static final int TWELVE = 4;
    public static final int TWENTY = 5;
    public static final int HUNDRED = 6;

    private static volatile ManualRollRequest[] _emptyArray;
    public static ManualRollRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ManualRollRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string note = 1;
    public java.lang.String note;

    // optional uint32 unique = 2;
    public int unique;

    // optional .ManualRollRequest.Dice what = 3;
    public int what;

    public ManualRollRequest() {
      clear();
    }

    public ManualRollRequest clear() {
      note = "";
      unique = 0;
      what = com.massimodz8.collaborativegrouporder.protocol.nano.Network.ManualRollRequest.FOUR;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.note.equals("")) {
        output.writeString(1, this.note);
      }
      if (this.unique != 0) {
        output.writeUInt32(2, this.unique);
      }
      if (this.what != com.massimodz8.collaborativegrouporder.protocol.nano.Network.ManualRollRequest.FOUR) {
        output.writeInt32(3, this.what);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.note.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.note);
      }
      if (this.unique != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.unique);
      }
      if (this.what != com.massimodz8.collaborativegrouporder.protocol.nano.Network.ManualRollRequest.FOUR) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.what);
      }
      return size;
    }

    @Override
    public ManualRollRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.note = input.readString();
            break;
          }
          case 16: {
            this.unique = input.readUInt32();
            break;
          }
          case 24: {
            int value = input.readInt32();
            switch (value) {
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.ManualRollRequest.FOUR:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.ManualRollRequest.SIX:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.ManualRollRequest.EIGHT:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.ManualRollRequest.TEN:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.ManualRollRequest.TWELVE:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.ManualRollRequest.TWENTY:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.ManualRollRequest.HUNDRED:
                this.what = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static ManualRollRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ManualRollRequest(), data);
    }

    public static ManualRollRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ManualRollRequest().mergeFrom(input);
    }
  }

  public static final class RollResult extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RollResult[] _emptyArray;
    public static RollResult[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RollResult[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 generator = 1;
    public int generator;

    // optional sint32 result = 2;
    public int result;

    public RollResult() {
      clear();
    }

    public RollResult clear() {
      generator = 0;
      result = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.generator != 0) {
        output.writeUInt32(1, this.generator);
      }
      if (this.result != 0) {
        output.writeSInt32(2, this.result);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.generator != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.generator);
      }
      if (this.result != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeSInt32Size(2, this.result);
      }
      return size;
    }

    @Override
    public RollResult mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.generator = input.readUInt32();
            break;
          }
          case 16: {
            this.result = input.readSInt32();
            break;
          }
        }
      }
    }

    public static RollResult parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RollResult(), data);
    }

    public static RollResult parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RollResult().mergeFrom(input);
    }
  }

  public static final class NewOrder extends
      com.google.protobuf.nano.MessageNano {

    public static final class Temporary extends
        com.google.protobuf.nano.MessageNano {

      private static volatile Temporary[] _emptyArray;
      public static Temporary[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Temporary[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string name = 1;
      public java.lang.String name;

      // optional uint32 id = 2;
      public int id;

      public Temporary() {
        clear();
      }

      public Temporary clear() {
        name = "";
        id = 0;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.name.equals("")) {
          output.writeString(1, this.name);
        }
        if (this.id != 0) {
          output.writeUInt32(2, this.id);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.name.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.name);
        }
        if (this.id != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(2, this.id);
        }
        return size;
      }

      @Override
      public Temporary mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.name = input.readString();
              break;
            }
            case 16: {
              this.id = input.readUInt32();
              break;
            }
          }
        }
      }

      public static Temporary parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Temporary(), data);
      }

      public static Temporary parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Temporary().mergeFrom(input);
      }
    }

    private static volatile NewOrder[] _emptyArray;
    public static NewOrder[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new NewOrder[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .NewOrder.Temporary temporaries = 1;
    public com.massimodz8.collaborativegrouporder.protocol.nano.Network.NewOrder.Temporary[] temporaries;

    // repeated uint32 sequence = 2;
    public int[] sequence;

    public NewOrder() {
      clear();
    }

    public NewOrder clear() {
      temporaries = com.massimodz8.collaborativegrouporder.protocol.nano.Network.NewOrder.Temporary.emptyArray();
      sequence = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.temporaries != null && this.temporaries.length > 0) {
        for (int i = 0; i < this.temporaries.length; i++) {
          com.massimodz8.collaborativegrouporder.protocol.nano.Network.NewOrder.Temporary element = this.temporaries[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.sequence != null && this.sequence.length > 0) {
        for (int i = 0; i < this.sequence.length; i++) {
          output.writeUInt32(2, this.sequence[i]);
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.temporaries != null && this.temporaries.length > 0) {
        for (int i = 0; i < this.temporaries.length; i++) {
          com.massimodz8.collaborativegrouporder.protocol.nano.Network.NewOrder.Temporary element = this.temporaries[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.sequence != null && this.sequence.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.sequence.length; i++) {
          int element = this.sequence[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.sequence.length;
      }
      return size;
    }

    @Override
    public NewOrder mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.temporaries == null ? 0 : this.temporaries.length;
            com.massimodz8.collaborativegrouporder.protocol.nano.Network.NewOrder.Temporary[] newArray =
                new com.massimodz8.collaborativegrouporder.protocol.nano.Network.NewOrder.Temporary[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.temporaries, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.massimodz8.collaborativegrouporder.protocol.nano.Network.NewOrder.Temporary();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.massimodz8.collaborativegrouporder.protocol.nano.Network.NewOrder.Temporary();
            input.readMessage(newArray[i]);
            this.temporaries = newArray;
            break;
          }
          case 16: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 16);
            int i = this.sequence == null ? 0 : this.sequence.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.sequence, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt32();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt32();
            this.sequence = newArray;
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt32();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.sequence == null ? 0 : this.sequence.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.sequence, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt32();
            }
            this.sequence = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }

    public static NewOrder parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new NewOrder(), data);
    }

    public static NewOrder parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new NewOrder().mergeFrom(input);
    }
  }

  public static final class RoundProgress extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RoundProgress[] _emptyArray;
    public static RoundProgress[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RoundProgress[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 id = 1;
    public int id;

    public RoundProgress() {
      clear();
    }

    public RoundProgress clear() {
      id = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0) {
        output.writeUInt32(1, this.id);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.id);
      }
      return size;
    }

    @Override
    public RoundProgress mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readUInt32();
            break;
          }
        }
      }
    }

    public static RoundProgress parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RoundProgress(), data);
    }

    public static RoundProgress parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RoundProgress().mergeFrom(input);
    }
  }

  public static final class ActiveStatus extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ActiveStatus[] _emptyArray;
    public static ActiveStatus[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ActiveStatus[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bool active = 1;
    public boolean active;

    // optional string reason = 2;
    public java.lang.String reason;

    // optional bool waiting = 3;
    public boolean waiting;

    public ActiveStatus() {
      clear();
    }

    public ActiveStatus clear() {
      active = false;
      reason = "";
      waiting = false;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.active != false) {
        output.writeBool(1, this.active);
      }
      if (!this.reason.equals("")) {
        output.writeString(2, this.reason);
      }
      if (this.waiting != false) {
        output.writeBool(3, this.waiting);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.active != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(1, this.active);
      }
      if (!this.reason.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.reason);
      }
      if (this.waiting != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(3, this.waiting);
      }
      return size;
    }

    @Override
    public ActiveStatus mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.active = input.readBool();
            break;
          }
          case 18: {
            this.reason = input.readString();
            break;
          }
          case 24: {
            this.waiting = input.readBool();
            break;
          }
        }
      }
    }

    public static ActiveStatus parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ActiveStatus(), data);
    }

    public static ActiveStatus parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ActiveStatus().mergeFrom(input);
    }
  }

  public static final class EndTurn extends
      com.google.protobuf.nano.MessageNano {

    private static volatile EndTurn[] _emptyArray;
    public static EndTurn[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new EndTurn[0];
          }
        }
      }
      return _emptyArray;
    }

    public EndTurn() {
      clear();
    }

    public EndTurn clear() {
      cachedSize = -1;
      return this;
    }

    @Override
    public EndTurn mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
        }
      }
    }

    public static EndTurn parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new EndTurn(), data);
    }

    public static EndTurn parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new EndTurn().mergeFrom(input);
    }
  }

  public static final class Reorder extends
      com.google.protobuf.nano.MessageNano {

    // enum When
    public static final int FIRST = 0;
    public static final int LAST = 1;
    public static final int BEFORE = 2;
    public static final int CONDITIONAL = 3;

    private static volatile Reorder[] _emptyArray;
    public static Reorder[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Reorder[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .Reorder.When newPos = 1;
    public int newPos;

    // optional string description = 2;
    public java.lang.String description;

    // optional uint32 id = 3;
    public int id;

    public Reorder() {
      clear();
    }

    public Reorder clear() {
      newPos = com.massimodz8.collaborativegrouporder.protocol.nano.Network.Reorder.FIRST;
      description = "";
      id = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.newPos != com.massimodz8.collaborativegrouporder.protocol.nano.Network.Reorder.FIRST) {
        output.writeInt32(1, this.newPos);
      }
      if (!this.description.equals("")) {
        output.writeString(2, this.description);
      }
      if (this.id != 0) {
        output.writeUInt32(3, this.id);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.newPos != com.massimodz8.collaborativegrouporder.protocol.nano.Network.Reorder.FIRST) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.newPos);
      }
      if (!this.description.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.description);
      }
      if (this.id != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.id);
      }
      return size;
    }

    @Override
    public Reorder mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.Reorder.FIRST:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.Reorder.LAST:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.Reorder.BEFORE:
              case com.massimodz8.collaborativegrouporder.protocol.nano.Network.Reorder.CONDITIONAL:
                this.newPos = value;
                break;
            }
            break;
          }
          case 18: {
            this.description = input.readString();
            break;
          }
          case 24: {
            this.id = input.readUInt32();
            break;
          }
        }
      }
    }

    public static Reorder parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Reorder(), data);
    }

    public static Reorder parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Reorder().mergeFrom(input);
    }
  }
}
